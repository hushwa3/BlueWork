@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    var email = UserManager.GetUserName(User); // Get the user's email
    var firstName = email?.Split('@')[0].Split('.')[0].Split('_')[0]; // Extract the part before '@' and handle separators (like dots or underscores)
    firstName = string.IsNullOrEmpty(firstName) ? "User" : char.ToUpper(firstName[0]) + firstName.Substring(1).ToLower(); // Capitalize first letter

    <div class="dropdown">
        <div class="dropdown-toggle border-0" type="button" id="profileDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fa-solid fa-circle-user fa-3x"></i>
        </div>
        <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="profileDropdown">
            <li class="px-3 py-2">
                <div class="d-flex align-items-center">
                   
                    <div>
                        <h6 class="mb-0">@firstName</h6>
                        <small class="text-muted">@UserManager.GetUserName(User)</small>
                    </div>
                </div>
            </li>
            <li><hr class="dropdown-divider"></li>
            @if (User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a class="text-dark dropdown-item" asp-area="" asp-controller="UserAccounts" asp-action="Index">User Accounts</a>
                </li>
                <li class="nav-item">
                    <a class="dropdown-item text-dark" asp-area="" asp-controller="EntityRoles" asp-action="Index">Roles</a>
                </li>
            }
            @if (User.IsInRole("Client"))
            {
                <li class="nav-item">
                    <a class="text-dark dropdown-item" asp-area="" asp-controller="Home" asp-action="Client_Dashboard">Dashboard</a>
                </li>
            }


            <li class="nav-item">
                <a class="dropdown-item text-dark" id="manage" title="Manage" asp-area="Identity" asp-page="/Account/Manage/Index">Manage Account</a>
            </li>
            <li><hr class="dropdown-divider"></li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Home", "Home", new { area = "" })">
                    <button type="submit" class="border-0 w-100 dropdown-item text-danger" id="logouton" click="handleLogout()"><i class="bi bi-box-arrow-right me-2"></i>Logout</button>
                </form>
            </li>

        </ul>
    </div>
  
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item p-0">
        <button type="button" class="btn btn-primary p-0">
            <a class="nav-link text-light m-0" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </button>
    </li>
    
}